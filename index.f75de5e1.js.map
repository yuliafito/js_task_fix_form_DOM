{"mappings":"AAAA;AAEA,MAAM,eAAe;OAAI,SAAS,gBAAgB,CAAC;CAAU;AAE7D,MAAM,cAAc,CAAC;IACnB,IAAI,gBAAgB;IACpB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACzC,MAAM,OAAO,SAAS,CAAC,EAAE;QACzB,IAAI,MAAM,GACR,iBAAiB,KAAK,WAAW;aAC5B,IAAI,QAAQ,OAAO,QAAQ,KAChC,iBAAiB,MAAM,KAAK,WAAW;aAEvC,iBAAiB;IAErB;IACA,OAAO;AACT;AAEA,aAAa,OAAO,CAAC,CAAC;IACpB,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,YAAY,CAAC,SAAS;IAE5B,MAAM,QAAQ,MAAM,aAAa,CAAC;IAClC,MAAM,YAAY,MAAM,YAAY,CAAC;IAErC,MAAM,YAAY,CAAC,OAAO,MAAM,YAAY,CAAC;IAC7C,MAAM,WAAW,GAAG,YAAY;IAChC,MAAM,YAAY,CAAC,eAAe,MAAM,WAAW;IACnD,MAAM,OAAO,CAAC;AAChB","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfFields = [...document.querySelectorAll('.field')];\n\nconst formatLabel = (inputName) => {\n  let formattedText = '';\n  for (let i = 0; i < inputName.length; i++) {\n    const char = inputName[i];\n    if (i === 0) {\n      formattedText += char.toUpperCase();\n    } else if (char >= 'A' && char <= 'Z') {\n      formattedText += ' ' + char.toLowerCase();\n    } else {\n      formattedText += char;\n    }\n  }\n  return formattedText;\n};\n\nlistOfFields.forEach((field) => {\n  const label = document.createElement('label');\n\n  label.setAttribute('class', 'field-label');\n\n  const input = field.querySelector('input');\n  const inputName = input.getAttribute('name');\n\n  label.setAttribute('for', input.getAttribute('id'));\n  label.textContent = formatLabel(inputName);\n  input.setAttribute('placeholder', label.textContent);\n  field.prepend(label);\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}