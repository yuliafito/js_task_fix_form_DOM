{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAmB,SAAS,gBAAgB,CAAC,Y,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE7C,EAAc,SAAC,CAArB,EAGE,IAAK,IAFD,EAAgB,GAEX,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IAAK,CACzC,IAAM,EAAO,CAAS,CAAC,EAAE,AAErB,AAAM,CAAA,IAAN,EACF,GAAiB,EAAK,WAAW,GACxB,GAAQ,KAAO,GAAQ,IAChC,GAAiB,IAAM,EAAK,WAAW,GAEvC,GAAiB,CAErB,CAEA,OAAO,CACT,EAEA,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,YAAY,CAAC,QAAS,eAE5B,IAAM,EAAQ,EAAM,aAAa,CAAC,SAC5B,EAAY,EAAM,YAAY,CAAC,QAErC,EAAM,YAAY,CAAC,MAAO,EAAM,YAAY,CAAC,OAC7C,EAAM,WAAW,CAAG,EAAY,GAChC,EAAM,YAAY,CAAC,cAAe,EAAM,WAAW,EACnD,EAAM,OAAO,CAAC,EAChB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listOfFields = _to_consumable_array(document.querySelectorAll(\".field\"));\nvar formatLabel = function(inputName) {\n    var formattedText = \"\";\n    for(var i = 0; i < inputName.length; i++){\n        var char = inputName[i];\n        if (i === 0) formattedText += char.toUpperCase();\n        else if (char >= \"A\" && char <= \"Z\") formattedText += \" \" + char.toLowerCase();\n        else formattedText += char;\n    }\n    return formattedText;\n};\nlistOfFields.forEach(function(field) {\n    var label = document.createElement(\"label\");\n    label.setAttribute(\"class\", \"field-label\");\n    var input = field.querySelector(\"input\");\n    var inputName = input.getAttribute(\"name\");\n    label.setAttribute(\"for\", input.getAttribute(\"id\"));\n    label.textContent = formatLabel(inputName);\n    input.setAttribute(\"placeholder\", label.textContent);\n    field.prepend(label);\n});\n\n//# sourceMappingURL=index.163e07b0.js.map\n","'use strict';\n\nconst listOfFields = [...document.querySelectorAll('.field')];\n\nconst formatLabel = (inputName) => {\n  let formattedText = '';\n\n  for (let i = 0; i < inputName.length; i++) {\n    const char = inputName[i];\n\n    if (i === 0) {\n      formattedText += char.toUpperCase();\n    } else if (char >= 'A' && char <= 'Z') {\n      formattedText += ' ' + char.toLowerCase();\n    } else {\n      formattedText += char;\n    }\n  }\n\n  return formattedText;\n};\n\nlistOfFields.forEach((field) => {\n  const label = document.createElement('label');\n\n  label.setAttribute('class', 'field-label');\n\n  const input = field.querySelector('input');\n  const inputName = input.getAttribute('name');\n\n  label.setAttribute('for', input.getAttribute('id'));\n  label.textContent = formatLabel(inputName);\n  input.setAttribute('placeholder', label.textContent);\n  field.prepend(label);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","listOfFields","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","formatLabel","inputName","formattedText","char","toUpperCase","toLowerCase","forEach","field","label","createElement","setAttribute","input","querySelector","getAttribute","textContent","prepend"],"version":3,"file":"index.163e07b0.js.map"}